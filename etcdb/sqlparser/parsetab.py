
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'NUMBER STRING STRING_VALUE GREATER_OR_EQ LESS_OR_EQ N_EQ SELECT VERSION AUTO_INCREMENT CREATE DEFAULT FULL INTEGER KEY NULL PRIMARY SHOW TABLE TABLES VARCHAR NOT DATETIME DATABASE DATABASES USE INT FROM COMMIT WHERE OR AND IS SET AUTOCOMMIT LONGTEXT SMALLINT UNSIGNED BOOL TINYINT UNIQUE NAMES INSERT INTO VALUES DROP LIMIT AS UPDATE COUNT ORDER BY ASC DESC WAIT IF EXISTSstatement : select_statement\n        | show_tables_statement\n        | create_table_statement\n        | create_database_statement\n        | show_databases_statement\n        | use_database_statement\n        | commit_statement\n        | set_statement\n        | insert_statement\n        | drop_database_statement\n        | drop_table_statement\n        | desc_table_statement\n        | update_table_statement\n        | wait_statementwait_statement : WAIT \'(\' arg \')\' FROM identifierupdate_table_statement : UPDATE identifier SET identifier \'=\' STRING_VALUE opt_WHERE desc_table_statement : DESC identifierdrop_database_statement : DROP DATABASE identifierdrop_table_statement : DROP TABLE identifier opt_IF_EXISTSopt_IF_EXISTS : opt_IF_EXISTS : IF EXISTSinsert_statement : INSERT INTO identifier opt_fieldlist VALUES \'(\' values_list \')\'opt_fieldlist : opt_fieldlist : \'(\' fieldlist \')\'fieldlist : identifierfieldlist : fieldlist \',\' identifier  values_list : valuevalues_list : values_list \',\' valueset_statement : set_autocommit_statement\n        | set_names_statementset_names_statement : SET NAMES STRINGset_autocommit_statement : SET AUTOCOMMIT \'=\' NUMBERcommit_statement : COMMITcreate_table_statement : CREATE TABLE identifier \'(\' create_definition_list \')\'create_database_statement : CREATE DATABASE identifiershow_databases_statement : SHOW DATABASESuse_database_statement : USE identifieridentifier : STRINGidentifier : \'`\' STRING \'`\'create_definition_list : create_definition\n        | create_definition_list \',\' create_definitioncreate_definition : identifier column_definitioncolumn_definition : data_type opt_column_def_options_listdata_type : INTEGER opt_UNSIGNED\n        | VARCHAR \'(\' NUMBER \')\'\n        | DATETIME\n        | DATETIME \'(\' NUMBER \')\'\n        | INT opt_UNSIGNED\n        | LONGTEXT\n        | SMALLINT opt_UNSIGNED\n        | TINYINT\n        | BOOLopt_UNSIGNED :\n        | UNSIGNEDopt_column_def_options_list : opt_column_def_options_list : opt_column_def_options opt_column_def_options_listopt_column_def_options : DEFAULT valueopt_column_def_options : NULLopt_column_def_options : NOT NULLopt_column_def_options : AUTO_INCREMENTopt_column_def_options : PRIMARY KEYopt_column_def_options : UNIQUEvalue : q_STRING\n        | NUMBER\n        | STRING_VALUE q_STRING : "\'" STRING "\'" q_STRING :  select_statement : SELECT select_expr_list opt_FROM opt_WHERE opt_ORDER_BY opt_LIMITopt_ORDER_BY : opt_ORDER_BY : ORDER BY identifier opt_ORDER_DIRECTIONopt_ORDER_BY : ORDER BY identifier \'.\' identifier opt_ORDER_DIRECTIONopt_ORDER_DIRECTION : opt_ORDER_DIRECTION : ASC\n        | DESC opt_LIMIT : opt_LIMIT : LIMIT NUMBERshow_tables_statement : SHOW opt_FULL TABLESopt_FROM : opt_FROM : FROM table_referencetable_reference : identifiertable_reference : identifier \'.\' identifieropt_FULL : opt_FULL : FULLselect_expr_list : select_expr opt_AS\n        | select_expr opt_AS \',\' select_expr_listopt_AS :\n        | AS identifierselect_expr : \'(\' NUMBER \')\'select_expr : function \'(\' arglist \')\'select_expr : identifierselect_expr : identifier \'.\' identifierselect_expr : \'@\' \'@\' STRINGarglist : arglist : argarglist : arg \',\' arglistfunction : VERSION\n        | COUNTarg : STRINGarg : \'*\'opt_WHERE : opt_WHERE : WHERE exprexpr : expr OR exprexpr : expr AND exprexpr : boolean_primaryboolean_primary : boolean_primary IS NULLboolean_primary : boolean_primary IS NOT NULLboolean_primary : boolean_primary comparison_operator predicateboolean_primary : predicatecomparison_operator : \'=\'\n        | GREATER_OR_EQ\n        | \'>\'\n        | LESS_OR_EQ\n        | \'<\'\n        | N_EQpredicate : bit_expr bit_expr : simple_exprsimple_expr : identifiersimple_expr : identifier \'.\' identifiersimple_expr : STRING_VALUEsimple_expr : \'(\' expr \')\''
    
_lr_action_items = {'USE':([0,],[1,]),'*':([47,54,94,],[70,70,70,]),'DEFAULT':([139,141,142,143,144,145,147,148,161,164,166,168,169,171,172,173,174,178,180,181,193,194,195,198,200,201,],[-53,173,-49,-46,-51,-52,-53,-53,-65,-64,-63,-54,-50,-62,173,-67,-60,-58,-44,-48,-57,-61,-59,-66,-45,-47,]),'DATABASES':([18,],[49,]),'NUMBER':([39,63,132,136,170,173,179,190,],[61,88,158,164,191,164,196,164,]),'UNSIGNED':([139,147,148,],[168,168,168,]),'TINYINT':([31,74,113,],[-38,-39,144,]),'LIMIT':([31,34,35,37,58,60,74,77,78,79,80,82,83,85,95,97,98,99,100,101,102,103,105,107,118,152,153,154,155,156,157,159,183,184,186,187,197,202,],[-38,-90,-78,-86,-100,-84,-39,-92,-91,-80,-79,-69,-87,-88,-89,-104,-108,-117,-119,-115,-101,-116,132,-85,-81,-105,-107,-118,-103,-102,-120,-72,-106,-70,-73,-74,-72,-71,]),'IF':([31,67,74,],[-38,91,-39,]),'N_EQ':([31,74,97,98,99,100,101,103,152,153,154,157,183,],[-38,-39,119,-108,-117,-119,-115,-116,-105,-107,-118,-120,-106,]),'IS':([31,74,97,98,99,100,101,103,152,153,154,157,183,],[-38,-39,120,-108,-117,-119,-115,-116,-105,-107,-118,-120,-106,]),'ORDER':([31,34,35,37,58,60,74,77,78,79,80,82,83,85,95,97,98,99,100,101,102,103,107,118,152,153,154,155,156,157,183,],[-38,-90,-78,-86,-100,-84,-39,-92,-91,-80,-79,106,-87,-88,-89,-104,-108,-117,-119,-115,-101,-116,-85,-81,-105,-107,-118,-103,-102,-120,-106,]),'SELECT':([0,],[5,]),'SMALLINT':([31,74,113,],[-38,-39,139,]),'INSERT':([0,],[6,]),'SET':([0,31,52,74,],[7,-38,73,-39,]),'VARCHAR':([31,74,113,],[-38,-39,140,]),'STRING_VALUE':([81,104,116,119,121,122,123,124,125,126,128,129,136,173,190,],[100,100,150,-114,-110,-113,-112,-109,100,-111,100,100,161,161,161,]),"'":([136,173,188,190,],[162,162,198,162,]),')':([31,54,61,69,70,71,74,75,76,94,97,98,99,100,101,103,108,109,111,112,117,130,136,139,141,142,143,144,145,146,147,148,152,153,154,155,156,157,160,161,163,164,165,166,167,168,169,171,172,173,174,176,178,180,181,183,190,191,192,193,194,195,196,198,199,200,201,],[-38,-93,85,-98,-99,92,-39,-94,95,-93,-104,-108,-117,-119,-115,-116,134,-25,137,-40,-95,157,-67,-53,-55,-49,-46,-51,-52,-42,-53,-53,-105,-107,-118,-103,-102,-120,-26,-65,-27,-64,189,-63,-41,-54,-50,-62,-55,-67,-60,-43,-58,-44,-48,-106,-67,200,-56,-57,-61,-59,201,-66,-28,-45,-47,]),'(':([5,16,31,32,36,38,62,66,74,81,84,104,110,119,121,122,123,124,125,126,128,129,140,143,],[39,47,-38,54,-97,-96,86,89,-39,104,39,104,136,-114,-110,-113,-112,-109,104,-111,104,104,170,179,]),'CREATE':([0,],[10,]),'DROP':([0,],[11,]),'NULL':([120,139,141,142,143,144,145,147,148,151,161,164,166,168,169,171,172,173,174,177,178,180,181,193,194,195,198,200,201,],[152,-53,178,-49,-46,-51,-52,-53,-53,183,-65,-64,-63,-54,-50,-62,178,-67,-60,195,-58,-44,-48,-57,-61,-59,-66,-45,-47,]),',':([31,34,37,60,69,70,74,75,77,78,83,85,95,108,109,111,112,136,139,141,142,143,144,145,146,147,148,160,161,163,164,165,166,167,168,169,171,172,173,174,176,178,180,181,190,192,193,194,195,198,199,200,201,],[-38,-90,-86,84,-98,-99,-39,94,-92,-91,-87,-88,-89,135,-25,138,-40,-67,-53,-55,-49,-46,-51,-52,-42,-53,-53,-26,-65,-27,-64,190,-63,-41,-54,-50,-62,-55,-67,-60,-43,-58,-44,-48,-67,-56,-57,-61,-59,-66,-28,-45,-47,]),'.':([31,34,74,79,99,159,],[-38,56,-39,96,127,185,]),'ASC':([31,74,159,197,],[-38,-39,186,186,]),'NAMES':([7,],[42,]),'TABLE':([10,11,],[44,45,]),'WAIT':([0,],[16,]),'=':([31,41,74,93,97,98,99,100,101,103,152,153,154,157,183,],[-38,63,-39,116,124,-108,-117,-119,-115,-116,-105,-107,-118,-120,-106,]),'<':([31,74,97,98,99,100,101,103,152,153,154,157,183,],[-38,-39,122,-108,-117,-119,-115,-116,-105,-107,-118,-120,-106,]),'$end':([2,3,4,8,9,12,13,14,15,17,19,20,21,22,23,26,27,28,30,31,34,35,37,49,51,58,60,64,65,67,68,72,74,77,78,79,80,82,83,85,88,90,95,97,98,99,100,101,102,103,105,107,114,118,131,137,149,150,152,153,154,155,156,157,158,159,182,183,184,186,187,189,197,202,],[-7,-2,-30,-10,-4,-13,-5,0,-8,-12,-33,-14,-1,-11,-9,-29,-6,-3,-37,-38,-90,-78,-86,-36,-17,-100,-84,-31,-35,-20,-18,-77,-39,-92,-91,-80,-79,-69,-87,-88,-32,-19,-89,-104,-108,-117,-119,-115,-101,-116,-75,-85,-21,-81,-68,-34,-15,-100,-105,-107,-118,-103,-102,-120,-76,-72,-16,-106,-70,-73,-74,-22,-72,-71,]),'COUNT':([5,84,],[36,36,]),'@':([5,33,84,],[33,55,33,]),'PRIMARY':([139,141,142,143,144,145,147,148,161,164,166,168,169,171,172,173,174,178,180,181,193,194,195,198,200,201,],[-53,175,-49,-46,-51,-52,-53,-53,-65,-64,-63,-54,-50,-62,175,-67,-60,-58,-44,-48,-57,-61,-59,-66,-45,-47,]),'FULL':([18,],[50,]),'STRING':([1,5,24,25,29,40,42,43,44,45,46,47,54,55,56,57,59,73,81,84,86,89,94,96,104,115,119,121,122,123,124,125,126,127,128,129,133,135,138,162,185,],[31,31,31,31,53,31,64,31,31,31,31,69,69,77,31,31,31,31,31,31,31,31,69,31,31,31,-114,-110,-113,-112,-109,31,-111,31,31,31,31,31,31,188,31,]),'EXISTS':([91,],[114,]),'SHOW':([0,],[18,]),'INTO':([6,],[40,]),'BY':([106,],[133,]),'UPDATE':([0,],[25,]),'DATETIME':([31,74,113,],[-38,-39,143,]),'AS':([31,34,37,74,77,78,85,95,],[-38,-90,59,-39,-92,-91,-88,-89,]),'VERSION':([5,84,],[38,38,]),'LESS_OR_EQ':([31,74,97,98,99,100,101,103,152,153,154,157,183,],[-38,-39,123,-108,-117,-119,-115,-116,-105,-107,-118,-120,-106,]),'COMMIT':([0,],[19,]),'UNIQUE':([139,141,142,143,144,145,147,148,161,164,166,168,169,171,172,173,174,178,180,181,193,194,195,198,200,201,],[-53,171,-49,-46,-51,-52,-53,-53,-65,-64,-63,-54,-50,-62,171,-67,-60,-58,-44,-48,-57,-61,-59,-66,-45,-47,]),'WHERE':([31,34,35,37,58,60,74,77,78,79,80,83,85,95,107,118,150,],[-38,-90,-78,-86,81,-84,-39,-92,-91,-80,-79,-87,-88,-89,-85,-81,81,]),'DESC':([0,31,74,159,197,],[24,-38,-39,187,187,]),'AUTOCOMMIT':([7,],[41,]),'`':([1,5,24,25,40,43,44,45,46,53,56,57,59,73,81,84,86,89,96,104,115,119,121,122,123,124,125,126,127,128,129,133,135,138,185,],[29,29,29,29,29,29,29,29,29,74,29,29,29,29,29,29,29,29,29,29,29,-114,-110,-113,-112,-109,29,-111,29,29,29,29,29,29,29,]),'GREATER_OR_EQ':([31,74,97,98,99,100,101,103,152,153,154,157,183,],[-38,-39,121,-108,-117,-119,-115,-116,-105,-107,-118,-120,-106,]),'FROM':([31,34,35,37,60,74,77,78,83,85,92,95,107,],[-38,-90,57,-86,-84,-39,-92,-91,-87,-88,115,-89,-85,]),'DATABASE':([10,11,],[43,46,]),'INT':([31,74,113,],[-38,-39,148,]),'INTEGER':([31,74,113,],[-38,-39,147,]),'TABLES':([18,48,50,],[-82,72,-83,]),'LONGTEXT':([31,74,113,],[-38,-39,142,]),'AND':([31,74,97,98,99,100,101,102,103,130,152,153,154,155,156,157,183,],[-38,-39,-104,-108,-117,-119,-115,128,-116,128,-105,-107,-118,128,128,-120,-106,]),'BOOL':([31,74,113,],[-38,-39,145,]),'KEY':([175,],[194,]),'VALUES':([31,62,74,87,134,],[-38,-23,-39,110,-24,]),'AUTO_INCREMENT':([139,141,142,143,144,145,147,148,161,164,166,168,169,171,172,173,174,178,180,181,193,194,195,198,200,201,],[-53,174,-49,-46,-51,-52,-53,-53,-65,-64,-63,-54,-50,-62,174,-67,-60,-58,-44,-48,-57,-61,-59,-66,-45,-47,]),'NOT':([120,139,141,142,143,144,145,147,148,161,164,166,168,169,171,172,173,174,178,180,181,193,194,195,198,200,201,],[151,-53,177,-49,-46,-51,-52,-53,-53,-65,-64,-63,-54,-50,-62,177,-67,-60,-58,-44,-48,-57,-61,-59,-66,-45,-47,]),'>':([31,74,97,98,99,100,101,103,152,153,154,157,183,],[-38,-39,126,-108,-117,-119,-115,-116,-105,-107,-118,-120,-106,]),'OR':([31,74,97,98,99,100,101,102,103,130,152,153,154,155,156,157,183,],[-38,-39,-104,-108,-117,-119,-115,129,-116,129,-105,-107,-118,129,129,-120,-106,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'boolean_primary':([81,104,128,129,],[97,97,97,97,]),'commit_statement':([0,],[2,]),'show_tables_statement':([0,],[3,]),'column_definition':([113,],[146,]),'select_expr':([5,84,],[37,37,]),'simple_expr':([81,104,125,128,129,],[103,103,103,103,103,]),'set_names_statement':([0,],[4,]),'arg':([47,54,94,],[71,75,75,]),'opt_WHERE':([58,150,],[82,182,]),'arglist':([54,94,],[76,117,]),'show_databases_statement':([0,],[13,]),'opt_column_def_options':([141,172,],[172,172,]),'opt_ORDER_BY':([82,],[105,]),'drop_database_statement':([0,],[8,]),'create_database_statement':([0,],[9,]),'select_expr_list':([5,84,],[35,107,]),'update_table_statement':([0,],[12,]),'opt_LIMIT':([105,],[131,]),'fieldlist':([86,],[108,]),'statement':([0,],[14,]),'set_statement':([0,],[15,]),'opt_FROM':([35,],[58,]),'desc_table_statement':([0,],[17,]),'q_STRING':([136,173,190,],[166,166,166,]),'function':([5,84,],[32,32,]),'bit_expr':([81,104,125,128,129,],[101,101,101,101,101,]),'predicate':([81,104,125,128,129,],[98,98,153,98,98,]),'values_list':([136,],[165,]),'table_reference':([57,],[80,]),'data_type':([113,],[141,]),'opt_UNSIGNED':([139,147,148,],[169,180,181,]),'create_definition_list':([89,],[111,]),'opt_ORDER_DIRECTION':([159,197,],[184,202,]),'wait_statement':([0,],[20,]),'opt_FULL':([18,],[48,]),'select_statement':([0,],[21,]),'drop_table_statement':([0,],[22,]),'opt_IF_EXISTS':([67,],[90,]),'opt_AS':([37,],[60,]),'insert_statement':([0,],[23,]),'identifier':([1,5,24,25,40,43,44,45,46,56,57,59,73,81,84,86,89,96,104,115,125,127,128,129,133,135,138,185,],[30,34,51,52,62,65,66,67,68,78,79,83,93,99,34,109,113,118,99,149,99,154,99,99,159,160,113,197,]),'opt_column_def_options_list':([141,172,],[176,192,]),'expr':([81,104,128,129,],[102,130,155,156,]),'opt_fieldlist':([62,],[87,]),'create_definition':([89,138,],[112,167,]),'value':([136,173,190,],[163,193,199,]),'use_database_statement':([0,],[27,]),'create_table_statement':([0,],[28,]),'set_autocommit_statement':([0,],[26,]),'comparison_operator':([97,],[125,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> select_statement','statement',1,'p_statement','parser.py',12),
  ('statement -> show_tables_statement','statement',1,'p_statement','parser.py',13),
  ('statement -> create_table_statement','statement',1,'p_statement','parser.py',14),
  ('statement -> create_database_statement','statement',1,'p_statement','parser.py',15),
  ('statement -> show_databases_statement','statement',1,'p_statement','parser.py',16),
  ('statement -> use_database_statement','statement',1,'p_statement','parser.py',17),
  ('statement -> commit_statement','statement',1,'p_statement','parser.py',18),
  ('statement -> set_statement','statement',1,'p_statement','parser.py',19),
  ('statement -> insert_statement','statement',1,'p_statement','parser.py',20),
  ('statement -> drop_database_statement','statement',1,'p_statement','parser.py',21),
  ('statement -> drop_table_statement','statement',1,'p_statement','parser.py',22),
  ('statement -> desc_table_statement','statement',1,'p_statement','parser.py',23),
  ('statement -> update_table_statement','statement',1,'p_statement','parser.py',24),
  ('statement -> wait_statement','statement',1,'p_statement','parser.py',25),
  ('wait_statement -> WAIT ( arg ) FROM identifier','wait_statement',6,'p_wait_statement','parser.py',30),
  ('update_table_statement -> UPDATE identifier SET identifier = STRING_VALUE opt_WHERE','update_table_statement',7,'p_update_table_statement','parser.py',43),
  ('desc_table_statement -> DESC identifier','desc_table_statement',2,'p_desc_table_statement','parser.py',49),
  ('drop_database_statement -> DROP DATABASE identifier','drop_database_statement',3,'p_drop_database_statement','parser.py',55),
  ('drop_table_statement -> DROP TABLE identifier opt_IF_EXISTS','drop_table_statement',4,'p_drop_table_statement','parser.py',61),
  ('opt_IF_EXISTS -> <empty>','opt_IF_EXISTS',0,'p_opt_if_exists_empty','parser.py',67),
  ('opt_IF_EXISTS -> IF EXISTS','opt_IF_EXISTS',2,'p_opt_if_exists','parser.py',71),
  ('insert_statement -> INSERT INTO identifier opt_fieldlist VALUES ( values_list )','insert_statement',8,'p_insert_statement','parser.py',76),
  ('opt_fieldlist -> <empty>','opt_fieldlist',0,'p_opt_fieldlist_empty','parser.py',92),
  ('opt_fieldlist -> ( fieldlist )','opt_fieldlist',3,'p_opt_fieldlist','parser.py',97),
  ('fieldlist -> identifier','fieldlist',1,'p_fieldlist_one','parser.py',102),
  ('fieldlist -> fieldlist , identifier','fieldlist',3,'p_fieldlist_many','parser.py',107),
  ('values_list -> value','values_list',1,'p_values_list_one','parser.py',116),
  ('values_list -> values_list , value','values_list',3,'p_values_list_many','parser.py',121),
  ('set_statement -> set_autocommit_statement','set_statement',1,'p_set_statement','parser.py',130),
  ('set_statement -> set_names_statement','set_statement',1,'p_set_statement','parser.py',131),
  ('set_names_statement -> SET NAMES STRING','set_names_statement',3,'p_set_names_statement','parser.py',135),
  ('set_autocommit_statement -> SET AUTOCOMMIT = NUMBER','set_autocommit_statement',4,'p_set_statement_autocommit','parser.py',140),
  ('commit_statement -> COMMIT','commit_statement',1,'p_commit_statement','parser.py',146),
  ('create_table_statement -> CREATE TABLE identifier ( create_definition_list )','create_table_statement',6,'p_create_table_statement','parser.py',151),
  ('create_database_statement -> CREATE DATABASE identifier','create_database_statement',3,'p_create_database_statement','parser.py',157),
  ('show_databases_statement -> SHOW DATABASES','show_databases_statement',2,'p_show_databases_statement','parser.py',163),
  ('use_database_statement -> USE identifier','use_database_statement',2,'p_use_database_statement','parser.py',168),
  ('identifier -> STRING','identifier',1,'p_identifier','parser.py',174),
  ('identifier -> ` STRING `','identifier',3,'p_identifier_escaped','parser.py',179),
  ('create_definition_list -> create_definition','create_definition_list',1,'p_create_definition_list','parser.py',184),
  ('create_definition_list -> create_definition_list , create_definition','create_definition_list',3,'p_create_definition_list','parser.py',185),
  ('create_definition -> identifier column_definition','create_definition',2,'p_create_definition','parser.py',189),
  ('column_definition -> data_type opt_column_def_options_list','column_definition',2,'p_column_definition','parser.py',194),
  ('data_type -> INTEGER opt_UNSIGNED','data_type',2,'p_data_type','parser.py',202),
  ('data_type -> VARCHAR ( NUMBER )','data_type',4,'p_data_type','parser.py',203),
  ('data_type -> DATETIME','data_type',1,'p_data_type','parser.py',204),
  ('data_type -> DATETIME ( NUMBER )','data_type',4,'p_data_type','parser.py',205),
  ('data_type -> INT opt_UNSIGNED','data_type',2,'p_data_type','parser.py',206),
  ('data_type -> LONGTEXT','data_type',1,'p_data_type','parser.py',207),
  ('data_type -> SMALLINT opt_UNSIGNED','data_type',2,'p_data_type','parser.py',208),
  ('data_type -> TINYINT','data_type',1,'p_data_type','parser.py',209),
  ('data_type -> BOOL','data_type',1,'p_data_type','parser.py',210),
  ('opt_UNSIGNED -> <empty>','opt_UNSIGNED',0,'p_opt_UNSIGNED','parser.py',215),
  ('opt_UNSIGNED -> UNSIGNED','opt_UNSIGNED',1,'p_opt_UNSIGNED','parser.py',216),
  ('opt_column_def_options_list -> <empty>','opt_column_def_options_list',0,'p_opt_column_def_options_list_empty','parser.py',220),
  ('opt_column_def_options_list -> opt_column_def_options opt_column_def_options_list','opt_column_def_options_list',2,'p_opt_column_def_options_list','parser.py',227),
  ('opt_column_def_options -> DEFAULT value','opt_column_def_options',2,'p_DEFAULT_CLAUSE','parser.py',236),
  ('opt_column_def_options -> NULL','opt_column_def_options',1,'p_NULL','parser.py',243),
  ('opt_column_def_options -> NOT NULL','opt_column_def_options',2,'p_NOT_NULL','parser.py',250),
  ('opt_column_def_options -> AUTO_INCREMENT','opt_column_def_options',1,'p_AUTO_INCREMENT','parser.py',257),
  ('opt_column_def_options -> PRIMARY KEY','opt_column_def_options',2,'p_PRIMARY_KEY','parser.py',264),
  ('opt_column_def_options -> UNIQUE','opt_column_def_options',1,'p_UNIQUE','parser.py',271),
  ('value -> q_STRING','value',1,'p_value','parser.py',278),
  ('value -> NUMBER','value',1,'p_value','parser.py',279),
  ('value -> STRING_VALUE','value',1,'p_value','parser.py',280),
  ("q_STRING -> ' STRING '",'q_STRING',3,'p_q_STRING','parser.py',285),
  ('q_STRING -> <empty>','q_STRING',0,'p_q_STRING_EMPTY','parser.py',290),
  ('select_statement -> SELECT select_expr_list opt_FROM opt_WHERE opt_ORDER_BY opt_LIMIT','select_statement',6,'p_select_statement','parser.py',295),
  ('opt_ORDER_BY -> <empty>','opt_ORDER_BY',0,'p_opt_ORDER_BY_empty','parser.py',304),
  ('opt_ORDER_BY -> ORDER BY identifier opt_ORDER_DIRECTION','opt_ORDER_BY',4,'p_opt_ORDER_BY_simple','parser.py',308),
  ('opt_ORDER_BY -> ORDER BY identifier . identifier opt_ORDER_DIRECTION','opt_ORDER_BY',6,'p_opt_ORDER_BY_extended','parser.py',314),
  ('opt_ORDER_DIRECTION -> <empty>','opt_ORDER_DIRECTION',0,'p_opt_ORDER_DIRECTION_empty','parser.py',320),
  ('opt_ORDER_DIRECTION -> ASC','opt_ORDER_DIRECTION',1,'p_opt_ORDER_DIRECTION','parser.py',325),
  ('opt_ORDER_DIRECTION -> DESC','opt_ORDER_DIRECTION',1,'p_opt_ORDER_DIRECTION','parser.py',326),
  ('opt_LIMIT -> <empty>','opt_LIMIT',0,'p_opt_LIMIT_empty','parser.py',331),
  ('opt_LIMIT -> LIMIT NUMBER','opt_LIMIT',2,'p_opt_LIMIT','parser.py',336),
  ('show_tables_statement -> SHOW opt_FULL TABLES','show_tables_statement',3,'p_show_tables_statement','parser.py',341),
  ('opt_FROM -> <empty>','opt_FROM',0,'p_opt_from_empty','parser.py',347),
  ('opt_FROM -> FROM table_reference','opt_FROM',2,'p_opt_from','parser.py',351),
  ('table_reference -> identifier','table_reference',1,'p_table_reference','parser.py',356),
  ('table_reference -> identifier . identifier','table_reference',3,'p_table_reference_w_database','parser.py',361),
  ('opt_FULL -> <empty>','opt_FULL',0,'p_opt_FULL_empty','parser.py',367),
  ('opt_FULL -> FULL','opt_FULL',1,'p_opt_FULL','parser.py',372),
  ('select_expr_list -> select_expr opt_AS','select_expr_list',2,'p_select_expr_list','parser.py',377),
  ('select_expr_list -> select_expr opt_AS , select_expr_list','select_expr_list',4,'p_select_expr_list','parser.py',378),
  ('opt_AS -> <empty>','opt_AS',0,'p_opt_AS','parser.py',382),
  ('opt_AS -> AS identifier','opt_AS',2,'p_opt_AS','parser.py',383),
  ('select_expr -> ( NUMBER )','select_expr',3,'p_select_one','parser.py',387),
  ('select_expr -> function ( arglist )','select_expr',4,'p_select_expr_func','parser.py',391),
  ('select_expr -> identifier','select_expr',1,'p_select_expr_field','parser.py',402),
  ('select_expr -> identifier . identifier','select_expr',3,'p_select_expr_field_w_table','parser.py',410),
  ('select_expr -> @ @ STRING','select_expr',3,'p_select_expr_variable','parser.py',419),
  ('arglist -> <empty>','arglist',0,'p_arglist_empty','parser.py',427),
  ('arglist -> arg','arglist',1,'p_arglist_one','parser.py',432),
  ('arglist -> arg , arglist','arglist',3,'p_arglist_many','parser.py',437),
  ('function -> VERSION','function',1,'p_function','parser.py',442),
  ('function -> COUNT','function',1,'p_function','parser.py',443),
  ('arg -> STRING','arg',1,'p_agr','parser.py',448),
  ('arg -> *','arg',1,'p_agr_star','parser.py',453),
  ('opt_WHERE -> <empty>','opt_WHERE',0,'p_opt_WHERE_empty','parser.py',458),
  ('opt_WHERE -> WHERE expr','opt_WHERE',2,'p_opt_WHERE','parser.py',462),
  ('expr -> expr OR expr','expr',3,'p_expr_OR','parser.py',467),
  ('expr -> expr AND expr','expr',3,'p_expr_AND','parser.py',472),
  ('expr -> boolean_primary','expr',1,'p_expr_bool_primary','parser.py',477),
  ('boolean_primary -> boolean_primary IS NULL','boolean_primary',3,'p_boolean_primary_is_null','parser.py',482),
  ('boolean_primary -> boolean_primary IS NOT NULL','boolean_primary',4,'p_boolean_primary_is_not_null','parser.py',487),
  ('boolean_primary -> boolean_primary comparison_operator predicate','boolean_primary',3,'p_boolean_primary_comparison','parser.py',492),
  ('boolean_primary -> predicate','boolean_primary',1,'p_boolean_primary_predicate','parser.py',497),
  ('comparison_operator -> =','comparison_operator',1,'p_comparison_operator','parser.py',502),
  ('comparison_operator -> GREATER_OR_EQ','comparison_operator',1,'p_comparison_operator','parser.py',503),
  ('comparison_operator -> >','comparison_operator',1,'p_comparison_operator','parser.py',504),
  ('comparison_operator -> LESS_OR_EQ','comparison_operator',1,'p_comparison_operator','parser.py',505),
  ('comparison_operator -> <','comparison_operator',1,'p_comparison_operator','parser.py',506),
  ('comparison_operator -> N_EQ','comparison_operator',1,'p_comparison_operator','parser.py',507),
  ('predicate -> bit_expr','predicate',1,'p_predicate','parser.py',512),
  ('bit_expr -> simple_expr','bit_expr',1,'p_bit_expr','parser.py',517),
  ('simple_expr -> identifier','simple_expr',1,'p_simple_expr_identifier','parser.py',522),
  ('simple_expr -> identifier . identifier','simple_expr',3,'p_simple_expr_identifier_full','parser.py',527),
  ('simple_expr -> STRING_VALUE','simple_expr',1,'p_simple_expr_string','parser.py',532),
  ('simple_expr -> ( expr )','simple_expr',3,'p_simple_expr_parent','parser.py',537),
]
